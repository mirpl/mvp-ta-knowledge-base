{
  "openapi": "3.0.1",
  "info": {
    "title": "mvp-API",
    "version": "2020-12-23 11:04:01.637180",
    "description": "Powerfarm API documentation",
    "contact": {
      "email": "saas-admin@makeitirght.ai",
      "name": "Administrator",
      "url": "https://makeitright.ai"
    }
  },
  "servers": [
    {
      "url": "https://tbhhsd5122.execute-api.us-east-1.amazonaws.com/mvp",
      "description": "API server"
    }
  ],
  "paths": {
    "/jobs": {
      "description": "Jobs",
      "post": {
        "tags": [
          "Jobs"
        ],
        "description": "Create new job",
        "responses": {
          "200": {
            "description": "Success will return jobID newly created job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jobID": {
                          "description": "Newly created job Id",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred if json request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Error occurred if workflow/process/technology not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body to create new job.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "author": {
                    "type": "string"
                  },
                  "workflowID": {
                    "type": "string"
                  },
                  "jobID": {
                    "type": "string",
                    "description": "if given, rerun of this job will be created with a given author, and other fields will be ignored"
                  },
                  "globalArguments": {
                    "type": "array",
                    "description": "array of IDs of Global Arguments which will be passed to job tasks"
                  },
                  "jobsConfiguration": {
                    "description": "You have to attach configuration for every process in workflow. Otherwise error 'bad request' will be returned.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "codeVersion": {
                          "type": "string"
                        },
                        "processID": {
                          "type": "string"
                        },
                        "gitReferenceType": {
                          "description": "Allowed values: 'branch', 'commit', 'tag'",
                          "type": "string"
                        },
                        "gitReferenceName": {
                          "type": "string"
                        },
                        "deviceConfiguration": {
                          "type": "object",
                          "description": "Only for mobile jobs",
                          "properties": {
                            "OS": {
                              "type": "string"
                            },
                            "applicationURL": {
                              "type": "string"
                            },
                            "deviceID": {
                              "type": "string"
                            }
                          }
                        },
                        "inputParameters": {
                          "type": "object",
                          "description": "map of parameter name by parameter value - provided automatically if using `globalArguments`"
                        },
                        "secretParameters": {
                          "type": "object",
                          "description": "map of parameter name by parameter ID - provided automatically if using `globalArguments`"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "mvp-apiAuthorizer": []
          }
        ]
      }
    },
    "/jobs/{jobId}/status": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success returns job status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jobStatus": {
                          "description": "Job status",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred if jobId won't be provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Error occurs when job cannot be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error occurred on backend side, try again later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "mvp-apiAuthorizer": []
          }
        ]
      }
    },
    "/callbacks": {
      "description": "Callbacks",
      "post": {
        "tags": [
          "callbacks"
        ],
        "description": "Create new callback",
        "responses": {
          "200": {
            "description": "Success will return jobID and callbackURL of updated job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jobID": {
                          "description": "Updated job Id",
                          "type": "string"
                        },
                        "callbackURL": {
                          "description": " defined for a job",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "If no callbackURL change needed, will return jobID and callbackURL of updated job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jobID": {
                          "description": "Updated job Id",
                          "type": "string"
                        },
                        "callbackURL": {
                          "description": " defined for a job",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred if json request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Error occurred if order does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body to create new callback for a job.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "default": "success"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "jobID": {
                        "description": "Updated job Id",
                        "type": "string"
                      },
                      "callbackURL": {
                        "description": "defined for a job",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "mvp-apiAuthorizer": []
          }
        ]
      }
    },
    "/devices": {
      "description": "Devices",
      "get": {
        "tags": [
          "devices"
        ],
        "description": "Get available mobile devices",
        "responses": {
          "200": {
            "description": "Success will return deviceID by device data object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error occurs if no available mobile devices or mobile devices were found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "mvp-apiAuthorizer": []
          }
        ]
      }
    },
    "/global-arguments": {
      "description": "Global Arguments",
      "get": {
        "tags": [
          "global-arguments"
        ],
        "description": "Get available global arguments",
        "responses": {
          "200": {
            "description": "Success will return global argument ID by global argument name, author and created date in unix millisecond format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "mvp-apiAuthorizer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "It will be set to 'error'"
          },
          "message": {
            "type": "string",
            "description": "Human readable message about error"
          },
          "data": {
            "type": "object",
            "description": "Additional error data"
          }
        }
      }
    },
    "securitySchemes": {
      "mvp-apiAuthorizer": {
        "type": "apiKey",
        "description": "API Authorizer by token",
        "name": "Token",
        "in": "header",
        "x-amazon-apigateway-authtype": "custom"
      }
    }
  }
}